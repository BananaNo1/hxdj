<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leis.hxds.odr.db.dao.OrderDao">
    <select id="searchDriverTodayBusinessData" parameterType="long" resultType="HashMap">
        select sum(timestampdiff(hour,end_time, start_time)) as duration,
               sum(real_free)                                as income,
               count(id)                                     as orders
        from tb_order
        where driver_id = #{driverId}
          and `status` in (5, 6, 7, 8)
          and date = current_date
    </select>

    <insert id="insert" parameterType="com.leis.hxds.odr.db.pojo.OrderEntity">
        insert into tb_order
        set uuid = #{uuid}, customer_id = #{customerId}, start_place = #{startPlace}, start_place_location = #{startPlaceLocation}, end_place = #{endPlace}, end_place_location = #{endPlaceLoaction}, expects_mileage = #{expectsMileage}, expects_fee= #{expectsFee}, favour_fee = #{favourFee}, charge_rule_id = #{chargeRuleId}, car_place = #{carPlace}, car_type = #{carType}, date = #{date}
    </insert>

    <select id="searchOrderIdByUUID" parameterType="String" resultType="String">
        select cast(id as char) as id
        from tb_order
        where uuid = #{uuid}
    </select>

    <update id="acceptNewOrder" parameterType="Map">
        update tb_order
        set driver_id   = #{driverId},
            accept_time = now(),
            `status=2`
        where id = #{orderId}
    </update>

    <select id="searchDriverExecutorOrder" parameterType="Map" resultType="HashMap">
        select cast(id as char)                              as id,
               customer_id                                   as customerId,
               start_place                                   as startPlace,
               start_place_location                          as startPlaceLocation,
               end_place                                     as endPlace,
               end_place_location                            as endPlaceLocation,
               cast(favour_fee as char)                      as favourFee,
               car_plate                                     as carPlate,
               car_type                                      as carType,
               DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%s') as createTime
        from tb_order
        where id = #{orderId}
          and driver_id = #{driverId}
    </select>

    <select id="searchOrderStatus" parameterType="Map" resultType="Integer">
        select status
        from tb_order
        where id =#{orderId}
        <if test="driverId!=null">
            and driver_id = #{driverId}
        </if>
        <if test="customerId!=null">
            and customer_id = #{customerId}
        </if>
    </select>

    <delete id="deleteAcceptOrder" parameterType="Map">
        delete from tb_order
        where id =#{orderId}
        <if test="driverId!=null">
            and driver_id = #{driverId}
        </if>
        <if test="customerId!=null">
            and customer_id =#{customerId}
        </if>
    </delete>

    <select id="searchDriverCurrentOrder" parameterType="long" resultType="HashMap">
        select cast(id as char)                              as id,
               customer_id                                   as customerId,
               start_place                                   as startPlace,
               start_place_location                          as startPlaceLocation,
               end_place                                     as endPlace,
               end_place_location                            as endPlaceLocation,
               cast(favour_fee as char)                      as favourFee,
               car_plate                                     as carPlate,
               car_type                                      as carType,
               DATE_FORMAT(create_time, '%Y-%m-%d %H:%i:%s') as createTime,
               `status`
        from tb_order
        where driver_id = #{driverId}
          and `status` in (2, 3, 4) limit 1
    </select>

    <select id="hashCustomerUnFinishedOrder" parameterType="long" resultType="long">
        select cast(id as char) as id
        from tb_order
        where customer_id = #{customerId}
          and `status` in (2, 3, 4) limit 1;
    </select>

    <select id="hashCustomerUnAcceptOrder" parameterType="long" resultType="HashMap">
        select cast(id as char)     as id,
               start_place          as startPlace,
               start_place_location as startPlaceLocation,
               end_place            as endPlace,
               end_place_location   as endPlaceLocation,
               car_plate            as carPlate,
               car_type             as carType
        from tb_order
        where customer_id = #{customerId}
          and `status` = 1 limit 1;
    </select>

    <select id="searchOrderForMoveById" parameterType="map" resultType="HashMap">
        select
        start_place as startPlace,
        start_place_location as startPlaceLocation,
        end_place as endPlace,
        end_place_location as endPlaceLocation,
        `status`
        from tb_order
        where id=#{orderId}
        <if test="customerId!=null">
            and customer_id = #{customerId}
        </if>
        <if test="driverId!=null">
            and driver_id = #{driverId}
        </if>
        limit 1;
    </select>

    <update id="updateOrderStatus" parameterType="Map">
        update tb_order
        set
        <if test="status==3">
            arrive_time = now(),
        </if>
        <if test="status==4">
            start_time = now(),
            waiting_minute = TIMESTAMPDIFF(MINUTE,arrive_time,now()),
        </if>
        <if test="status==5">
            end_time = now(),
        </if>
        `status` = #{status}
        where id =#{orderId}
        <if test="customerId!=null">
            and customer_id = #{customerId}
        </if>
        <if test="driverId!=null">
            and driver_id =#{driverId}
        </if>
    </update>

    <select id="searchOrderByPage" parameterType="Map" resultType="HashMap">
        select cast(id as char) as id,
        cast(start_place as char) as startPlace,
        cast(end_place as char) as endPlace,
        cast(real_mileage as char) as realMileage,
        cast(real_fee as char) as realFee,
        `status`,
        DATE_FORMAT(create_time,'%Y-%m-%d %H:%i') as createTime
        from tb_order
        where 1=1
        <if test="orderId!=null">
            and id =#{orderId}
        </if>
        <if test="customerId!=null">
            and customer_id =#{customerId}
        </if>
        <if test="driverId!=null">
            and driver_id =#{driverId}
        </if>
        <if test="startDate!=null and endDate!=null">
            and date between #{startDate} and #{endDate}
        </if>
        <if test="status!=null">
            and `status` =#{status}
        </if>
        order by id desc
        limit #{start},#{length}
    </select>

    <select id="searchOrderCount" parameterType="Map" resultType="long">
        select count(*)
        from tb_order
        where 1=1
        <if test="orderId!=null">
            and id =#{orderId}
        </if>
        <if test="customerId!=null">
            and customer_id =#{customerId}
        </if>
        <if test="driverId!=null">
            and driver_id =#{driverId}
        </if>
        <if test="startDate!=null and endDate!=null">
            and date between #{startDate} and #{endDate}
        </if>
        <if test="status!=null">
            and `status` =#{status}
        </if>
    </select>

    <select id="searchOrderContent" parameterType="long" resultType="HashMap">
        select cast(o.driver_id as char)                      as driverId,
               cast(o.customer_id as char)                    as customerId,
               o.car_plate                                    as carPlate,
               o.car_type                                     as carType,
               DATE_FORMAT(o.accept_time, '%Y-%m-%d %H:%i')   as acceptTime,
               DATE_FORMAT(o.arrive_time, '%Y-%m-%d %H:%i')   as arriveTime,
               DATE_FORMAT(o.start_time, '%Y-%m-%d %H:%i')    as startTime,
               DATE_FORMAT(o.end_time, '%Y-%m-%d %H:%i')      as endTime,
               o.waiting_minute                               as waitingMinute,
               TIMESTAMPDIFF(minute,o.start_time, o.end_time) as `driverMinute`,
               cast(o.real_mileage as char)                   as realMileage,
               cast(o.real_fee as char)                       as realFee,
               o.`status`,
               cast(o.charge_rule_id as char)                 as chargeRuleId,
               cast(o.cacel_rule_id as char)                  as canelRuleId,
               cast(p.rule_id as char)                        as profitsharingRuleId,
               o.start_place_location                         as startPlaceLocation,
               o.end_place_location                           as endPlaceLocation
        from tb_order o
                 left join tb_order_profitsharing p on o.id = p.order_id
        where o.id = #{orderId}
    </select>

    <select id="searchOrderStartLocationIn30Days" resultType="String">
        select start_place_location
        from tb_order
        where start_time is not null
          and start_time between timestampadd(day,-30, now()) and now()
    </select>

    <update id="updateOrderMileageAndFee" parameterType="Map">
        update tb_order
        set real_mileage   = #{realMileage},
            return_mileage = #{returnMileage},
            incentive_fee  = #{incentiveFee},
            real_fee       = #{total}
        where id = #{orderId}
    </update>

    <select id="validDriverOwnOrder" parameterType="Map" resultType="long">
        select count(*)
        from tb_order
        where id = #{orderId}
          and driver_id = #{driverId}
    </select>

    <select id="searchSettlementNeedData" parameterType="long" resultType="HashMap">
        select DATE_FORMAT(accept_time, '%Y-%m-%d %H:%i:%s') as acceptTime,
               DATE_FORMAT(start_time, '%Y-%m-%d %H:%i:%s')  as startTime,
               waiting_minute                                as waitingMinute,
               cast(favour_fee as char)                      as favourFee,
        from tb_order
        where id = #{orderId}
    </select>

    <select id="searchOrderById" parameterType="Map" resultType="HashMap">
        select cast(o.id as char) as id,
        cast(o.driver_id as char) as driverId,
        cast(o.customer_id as char) as customerId,
        o.start_place as startPlace,
        o.start_place_location as startPlaceLocation,
        o.end_place as endPlace,
        o.end_place_location as endPlaceLocation,
        cast(b.total as char) as total,
        cast(b.real_pay as char) as realPay,
        cast(b.mileage_fee as char) as mileageFee,
        cast(o.favour_fee as char) as favourFee,
        cast(o.incentive_fee as char) as incentiveFee,
        cast(b.waiting_fee as char) as waitingFee,
        cast(b.return_fee as char) as returnFee,
        cast(b.parking_fee as char) as parkingFee,
        cast(b.toll_fee as char) as tollFee,
        cast(b.other_fee as char) as otherFee,
        cast(b.voucher_fee as char) as voucherFee,
        cast(o.real_mileage as char) as realMileage,
        o.waiting_minute as waitingMinute,
        b.base_mileage as baseMileage,
        cast(b.base_mileage_price as char) as baseMileagePrice,
        cast(b.exceed_mileage_price as char) as exceedMileagePrice,
        b.base_minute as baseMinute,
        cast(b.exceed_return_price as char) as exceedReturnPrice,
        cast(o.return_mileage as char) as returnMileage,
        o.car_plate as carPlate,
        o.carType as carType,
        o.status,
        DATE_FORMAT(o.create_time,'%Y-%m-%d %H-%i-%s') as createTime,
        from tb_order o
        join tb_order_bill b on o.id = b.order_id
        where o.id = #{orderId}
        <if test="driverId!=null">
            and driver_id=#{driverId}
        </if>
        <if test="customerId!=null">
            and customer_id =#{customerId}
        </if>
    </select>

    <select id="validCanPayOrder" parameterType="Map" resultType="HashMap">
        select cast(real_fee as char)  as realFee,
               cast(driver_id as char) as driverId,
               uuid
        from tb_order
        where id = #{orderId}
          and customer_id = #{customerId}
          and `status` = 6
    </select>

    <update id="updateOrderPrepayId" parameterType="Map">
        update tb_order
        set prepay_id = #{prepayId}
        where id = #{orderId}
    </update>

    <select id="searchOrderIdAndStatus" parameterType="String" resultType="HashMap">
        select cast(id as char) as id,
               `status`
        from tb_order
        where uuid = #{uuid}
    </select>

    <select id="searchDriverIdAndIncentiveFee" parameterType="String" resultType="HashMap">
        select cast(driver_id as char)     as driverId,
               cast(incentive_fee as char) as incentiveFee
        from tb_order
        where uuid = #{uuid}
    </select>

    <update id="updateOrderPayIdAndStatus" parameterType="Map">
        update tb_order
        set pay_id  = #{payId},
            `status`=7,
            pay_time=#{payTime}
        where uuid = #{uuid}
    </update>

    <update id="finishOrder" parameterType="String">
        update tb_order
        set `status`=8
        where uuid = #{uuid}
    </update>

    <select id="searchUuidAndStatus" parameterType="long" resultType="HashMap">
        select uuid, `status`
        from tb_order
        where id = #{orderId}
    </select>

    <update id="updateOrderAboutPayment" parameterType="Map">
        update tb_order
        set status  = 7,
            pay_id=#{payId},
            pay_time=#{payTime}
        where id = #{orderId}
    </update>

    <select id="validDriverAndCustomerOwnOrder" parameterType="Map" resultType="long">
        select count(*)
        from tb_order
        where id = #{orderId}
          and driver_id = #{driverId}
          and customer_id = #{customerId};
    </select>

    <select id="searchDriverOrderByPage" parameterType="Map" resultType="HashMap">
        select cast(o.id as char) as id,
        DATE_FORMAT(o.accept_time,'%Y-%m-%d %H:%i:%s') as acceptTime,
        DATE_FORMAT(o.accept_time,'%Y年%m月') as `month`,
        cast(o.real_fee as char) as realFee,
        o.`status`,
        o.start_place as startPlace,
        o.end_place as endPlace,
        IFNULL(c.rate,-1) as rate
        from tb_order o
        left join tb_order_comment c on o.id = c.order_id
        where 1=1
        <if test="driverId!=null">
            and o.driver_id = #{driverId}
        </if>
        <if test="status!=null">
            and o.status = #{status}
        </if>
        order by o.id desc
        limit #{start},#{length}
    </select>

    <select id="searchDriverOrderCount" parameterType="Map" resultType="long">
        select count(*)
        from tb_order
        where 1=1
        <if test="driverId!=null">
            and driver_id = #{driverId}
        </if>
        <if test="status!=null">
            and `status` = #{status}
        </if>
    </select>

    <select id="searchCustomerOrderByPage" parameterType="Map" resultType="HashMap">
        select cast(o.id as char) as id,
        DATE_FORMAT(o.accept_time,'%Y-%m-%d %H:%i:%s') as acceptTime,
        DATE_FORMAT(o.accept_time,'%Y年%m月') as `month`,
        cast(o.real_fee as char) as realFee,
        o.`status`,
        o.start_place as startPlace,
        o.end_place as endPlace,
        IFNULL(c.rate,-1) as rate
        from tb_order o
        left join tb_order_comment c on o.id =c.order_id
        where 1=1
        <if test="customerId!=null">
            and o.customer_id =#{customerId}
        </if>
        <if test="status!=null">
            and o.`status` = #{status}
        </if>
        order by o.id desc
        limit #{start},#{length}
    </select>

    <select id="searchCustomerOrderCount" parameterType="Map" resultType="long">
        select count(*)
        from tb_order where 1=1
        <if test="customerId!=null">
            and customer_id =#{customerId}
        </if>
        <if test="status!=null">
            and `status`=#{status}
        </if>
    </select>


</mapper>
