<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leis.hxds.odr.db.dao.OrderBillDao">
    <insert id="insert" parameterType="com.leis.hxds.odr.db.pojo.OrderBillEntity">
        insert into tb_order_bill
        set order_id = #{orderId}, base_mileage = #{baseMileage}, base_mileage_price = #{baseMileagePrice}, exceed_mileage_price = #{exceedMileagePrice}, base_minute = #{baseMinute}, exceed_minute_price=#{exceedMinutePrice}, base_return_mileage=#{baseReturnMileage}, exceed_return_price=#{exceedReturnPrice}
    </insert>

    <delete id="deleteUnAcceptOrderBill" parameterType="long">
        delete
        from tb_order_bill
        where order_id = #{orderId}
    </delete>

    <update id="updateBillFee" parameterType="Map">
        update tb_order_bill
        set total         =#{total},
            mileage_fee   = #{mileageFee},
            waiting_fee   = #{waitingFee},
            toll_fee      = #{tollFee},
            parking_fee   = #{parkingFee},
            other_fee     = #{otherFee},
            return_fee    = #{returnFee},
            incentive_fee = #{incentiveFee}
        where order_id = #{orderId}
    </update>

    <select id="searchReviewDriverOrderBill" parameterType="Map" resultType="HashMap">
        select cast(b.total as char)                as total,
               cast(b.real_pay as char)             as realPay,
               cast(b.mileage_fee as char)          as mileageFee,
               cast(o.favour_fee as char)           as favourFee,
               cast(o.incentive_fee as char)        as incentiveFee,
               cast(b.waiting_fee as char)          as waitingFee,
               cast(o.real_mileage as char)         as realMileage,
               cast(b.return_fee as char)           as returnFee,
               cast(b.parking_fee as char)          as parkingFee,
               cast(b.toll_fee as char)             as tollFee,
               cast(b.other_fee as char)            as otherFee,
               cast(b.voucher_fee as char)          as voucherFee,
               o.waiting_minute                     as waitingMinute,
               b.base_mileage                       as baseMileage,
               cast(b.base_mileage_price as char)   as baseMileagePrice,
               cast(b.exceed_mileage_price as char) as exceedMileagePrice,
               b.base_minute                        as baseMinute,
               cast(b.exceed_mileage_price as char) as exceedMileagePrice,
               b.base_return_mileage                as baseReturnMileage,
               cast(b.exceed_return_price as char)  as exceedReturnPrice,
               cast(o.return_mileage as char)       as returnMileage,
               cast(p.tax_fee as char)              as taxFee,
               cast(p.driver_income as char)        as driverIncome,
        from tb_order o
                 join tb_order_bill b on o.id = b.order_id
                 join tb_order_profitsharing p on o.id = p.order_id
        where o.id = #{orderId} and o.driver_id= #{driverId}
            and o.`status`=5
    </select>

</mapper>
